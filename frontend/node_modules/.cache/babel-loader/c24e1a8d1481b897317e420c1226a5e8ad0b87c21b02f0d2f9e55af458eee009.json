{"ast":null,"code":"var _jsxFileName = \"C:\\\\SkinLensR\\\\SkinLensR\\\\my-agent-api\\\\frontend\\\\src\\\\components\\\\control-tray\\\\ControlTray.tsx\",\n  _s = $RefreshSig$();\n/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport cn from \"classnames\";\nimport { memo, useEffect, useRef, useState } from \"react\";\nimport { useLiveAPIContext } from \"../../contexts/LiveAPIContext\";\nimport { useScreenCapture } from \"../../hooks/use-screen-capture\";\nimport { useWebcam } from \"../../hooks/use-webcam\";\nimport { AudioRecorder } from \"../../utils/audio-recorder\";\nimport AudioPulse from \"../audio-pulse/AudioPulse\";\nimport \"./control-tray.scss\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n/**\n * button used for triggering webcam or screen-capture\n */\nconst MediaStreamButton = /*#__PURE__*/memo(_c = ({\n  isStreaming,\n  onIcon,\n  offIcon,\n  start,\n  stop\n}) => isStreaming ? /*#__PURE__*/_jsxDEV(\"button\", {\n  className: \"action-button\",\n  onClick: stop,\n  children: /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"material-symbols-outlined\",\n    children: onIcon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 7\n}, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n  className: \"action-button\",\n  onClick: start,\n  children: /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"material-symbols-outlined\",\n    children: offIcon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 7\n}, this));\n_c2 = MediaStreamButton;\nfunction ControlTray({\n  videoRef,\n  children,\n  onVideoStreamChange = () => {},\n  supportsVideo\n}) {\n  _s();\n  const videoStreams = [useWebcam(), useScreenCapture()];\n  const [activeVideoStream, setActiveVideoStream] = useState(null);\n  const [webcam, screenCapture] = videoStreams;\n  const [inVolume, setInVolume] = useState(0);\n  const [audioRecorder] = useState(() => new AudioRecorder());\n  const [muted, setMuted] = useState(false);\n  const renderCanvasRef = useRef(null);\n  const connectButtonRef = useRef(null);\n  const {\n    client,\n    connected,\n    connect,\n    disconnect,\n    volume\n  } = useLiveAPIContext();\n  useEffect(() => {\n    if (!connected && connectButtonRef.current) {\n      connectButtonRef.current.focus();\n    }\n  }, [connected]);\n  useEffect(() => {\n    document.documentElement.style.setProperty(\"--volume\", `${Math.max(5, Math.min(inVolume * 200, 8))}px`);\n  }, [inVolume]);\n  useEffect(() => {\n    const onData = base64 => {\n      client.sendRealtimeInput([{\n        mimeType: \"audio/pcm;rate=16000\",\n        data: base64\n      }]);\n    };\n    if (connected && !muted && audioRecorder) {\n      audioRecorder.on(\"data\", onData).on(\"volume\", setInVolume).start();\n    } else {\n      audioRecorder.stop();\n    }\n    return () => {\n      audioRecorder.off(\"data\", onData).off(\"volume\", setInVolume);\n    };\n  }, [connected, client, muted, audioRecorder]);\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.srcObject = activeVideoStream;\n    }\n    let timeoutId = -1;\n    function sendVideoFrame() {\n      const video = videoRef.current;\n      const canvas = renderCanvasRef.current;\n      if (!video || !canvas) {\n        return;\n      }\n      const ctx = canvas.getContext(\"2d\");\n      canvas.width = video.videoWidth * 0.25;\n      canvas.height = video.videoHeight * 0.25;\n      if (canvas.width + canvas.height > 0) {\n        ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n        const base64 = canvas.toDataURL(\"image/jpeg\", 1.0);\n        const data = base64.slice(base64.indexOf(\",\") + 1, Infinity);\n        client.sendRealtimeInput([{\n          mimeType: \"image/jpeg\",\n          data\n        }]);\n      }\n      if (connected) {\n        timeoutId = window.setTimeout(sendVideoFrame, 1000 / 0.5);\n      }\n    }\n    if (connected && activeVideoStream !== null) {\n      requestAnimationFrame(sendVideoFrame);\n    }\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [connected, activeVideoStream, client, videoRef]);\n\n  //handler for swapping from one video-stream to the next\n  const changeStreams = next => async () => {\n    if (next) {\n      const mediaStream = await next.start();\n      setActiveVideoStream(mediaStream);\n      onVideoStreamChange(mediaStream);\n    } else {\n      setActiveVideoStream(null);\n      onVideoStreamChange(null);\n    }\n    videoStreams.filter(msr => msr !== next).forEach(msr => msr.stop());\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"control-tray\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      style: {\n        display: \"none\"\n      },\n      ref: renderCanvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: cn(\"actions-nav\", {\n        disabled: !connected\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: cn(\"action-button mic-button\"),\n        onClick: () => setMuted(!muted),\n        children: !muted ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-outlined filled\",\n          children: \"mic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-outlined filled\",\n          children: \"mic_off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-button no-action outlined\",\n        children: /*#__PURE__*/_jsxDEV(AudioPulse, {\n          volume: volume,\n          active: connected,\n          hover: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), supportsVideo && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(MediaStreamButton, {\n          isStreaming: screenCapture.isStreaming,\n          start: changeStreams(screenCapture),\n          stop: changeStreams(),\n          onIcon: \"cancel_presentation\",\n          offIcon: \"present_to_all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MediaStreamButton, {\n          isStreaming: webcam.isStreaming,\n          start: changeStreams(webcam),\n          stop: changeStreams(),\n          onIcon: \"videocam_off\",\n          offIcon: \"videocam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(\"connection-container\", {\n        connected\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: connectButtonRef,\n          className: cn(\"action-button connect-toggle\", {\n            connected\n          }),\n          onClick: connected ? disconnect : connect,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-symbols-outlined filled\",\n            children: connected ? \"pause\" : \"play_arrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-indicator\",\n        children: \"Streaming\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(ControlTray, \"IcUKjMFPCyywjGkkjgI8jNJ2y6w=\", false, function () {\n  return [useWebcam, useScreenCapture, useLiveAPIContext];\n});\n_c3 = ControlTray;\nexport default _c4 = /*#__PURE__*/memo(ControlTray);\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"MediaStreamButton$memo\");\n$RefreshReg$(_c2, \"MediaStreamButton\");\n$RefreshReg$(_c3, \"ControlTray\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"names":["cn","memo","useEffect","useRef","useState","useLiveAPIContext","useScreenCapture","useWebcam","AudioRecorder","AudioPulse","jsxDEV","_jsxDEV","Fragment","_Fragment","MediaStreamButton","_c","isStreaming","onIcon","offIcon","start","stop","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","ControlTray","videoRef","onVideoStreamChange","supportsVideo","_s","videoStreams","activeVideoStream","setActiveVideoStream","webcam","screenCapture","inVolume","setInVolume","audioRecorder","muted","setMuted","renderCanvasRef","connectButtonRef","client","connected","connect","disconnect","volume","current","focus","document","documentElement","style","setProperty","Math","max","min","onData","base64","sendRealtimeInput","mimeType","data","on","off","srcObject","timeoutId","sendVideoFrame","video","canvas","ctx","getContext","width","videoWidth","height","videoHeight","drawImage","toDataURL","slice","indexOf","Infinity","window","setTimeout","requestAnimationFrame","clearTimeout","changeStreams","next","mediaStream","filter","msr","forEach","display","ref","disabled","active","hover","_c3","_c4","$RefreshReg$"],"sources":["C:/SkinLensR/SkinLensR/my-agent-api/frontend/src/components/control-tray/ControlTray.tsx"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport cn from \"classnames\";\n\nimport { memo, ReactNode, RefObject, useEffect, useRef, useState } from \"react\";\nimport { useLiveAPIContext } from \"../../contexts/LiveAPIContext\";\nimport { UseMediaStreamResult } from \"../../hooks/use-media-stream-mux\";\nimport { useScreenCapture } from \"../../hooks/use-screen-capture\";\nimport { useWebcam } from \"../../hooks/use-webcam\";\nimport { AudioRecorder } from \"../../utils/audio-recorder\";\nimport AudioPulse from \"../audio-pulse/AudioPulse\";\nimport \"./control-tray.scss\";\n\nexport type ControlTrayProps = {\n  videoRef: RefObject<HTMLVideoElement>;\n  children?: ReactNode;\n  supportsVideo: boolean;\n  onVideoStreamChange?: (stream: MediaStream | null) => void;\n};\n\ntype MediaStreamButtonProps = {\n  isStreaming: boolean;\n  onIcon: string;\n  offIcon: string;\n  start: () => Promise<any>;\n  stop: () => any;\n};\n\n/**\n * button used for triggering webcam or screen-capture\n */\nconst MediaStreamButton = memo(\n  ({ isStreaming, onIcon, offIcon, start, stop }: MediaStreamButtonProps) =>\n    isStreaming ? (\n      <button className=\"action-button\" onClick={stop}>\n        <span className=\"material-symbols-outlined\">{onIcon}</span>\n      </button>\n    ) : (\n      <button className=\"action-button\" onClick={start}>\n        <span className=\"material-symbols-outlined\">{offIcon}</span>\n      </button>\n    ),\n);\n\nfunction ControlTray({\n  videoRef,\n  children,\n  onVideoStreamChange = () => {},\n  supportsVideo,\n}: ControlTrayProps) {\n  const videoStreams = [useWebcam(), useScreenCapture()];\n  const [activeVideoStream, setActiveVideoStream] =\n    useState<MediaStream | null>(null);\n  const [webcam, screenCapture] = videoStreams;\n  const [inVolume, setInVolume] = useState(0);\n  const [audioRecorder] = useState(() => new AudioRecorder());\n  const [muted, setMuted] = useState(false);\n  const renderCanvasRef = useRef<HTMLCanvasElement>(null);\n  const connectButtonRef = useRef<HTMLButtonElement>(null);\n\n  const { client, connected, connect, disconnect, volume } =\n    useLiveAPIContext();\n\n  useEffect(() => {\n    if (!connected && connectButtonRef.current) {\n      connectButtonRef.current.focus();\n    }\n  }, [connected]);\n  useEffect(() => {\n    document.documentElement.style.setProperty(\n      \"--volume\",\n      `${Math.max(5, Math.min(inVolume * 200, 8))}px`,\n    );\n  }, [inVolume]);\n\n  useEffect(() => {\n    const onData = (base64: string) => {\n      client.sendRealtimeInput([\n        {\n          mimeType: \"audio/pcm;rate=16000\",\n          data: base64,\n        },\n      ]);\n    };\n    if (connected && !muted && audioRecorder) {\n      audioRecorder.on(\"data\", onData).on(\"volume\", setInVolume).start();\n    } else {\n      audioRecorder.stop();\n    }\n    return () => {\n      audioRecorder.off(\"data\", onData).off(\"volume\", setInVolume);\n    };\n  }, [connected, client, muted, audioRecorder]);\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.srcObject = activeVideoStream;\n    }\n\n    let timeoutId = -1;\n\n    function sendVideoFrame() {\n      const video = videoRef.current;\n      const canvas = renderCanvasRef.current;\n\n      if (!video || !canvas) {\n        return;\n      }\n\n      const ctx = canvas.getContext(\"2d\")!;\n      canvas.width = video.videoWidth * 0.25;\n      canvas.height = video.videoHeight * 0.25;\n      if (canvas.width + canvas.height > 0) {\n        ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n        const base64 = canvas.toDataURL(\"image/jpeg\", 1.0);\n        const data = base64.slice(base64.indexOf(\",\") + 1, Infinity);\n        client.sendRealtimeInput([{ mimeType: \"image/jpeg\", data }]);\n      }\n      if (connected) {\n        timeoutId = window.setTimeout(sendVideoFrame, 1000 / 0.5);\n      }\n    }\n    if (connected && activeVideoStream !== null) {\n      requestAnimationFrame(sendVideoFrame);\n    }\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [connected, activeVideoStream, client, videoRef]);\n\n  //handler for swapping from one video-stream to the next\n  const changeStreams = (next?: UseMediaStreamResult) => async () => {\n    if (next) {\n      const mediaStream = await next.start();\n      setActiveVideoStream(mediaStream);\n      onVideoStreamChange(mediaStream);\n    } else {\n      setActiveVideoStream(null);\n      onVideoStreamChange(null);\n    }\n\n    videoStreams.filter((msr) => msr !== next).forEach((msr) => msr.stop());\n  };\n\n  return (\n    <section className=\"control-tray\">\n      <canvas style={{ display: \"none\" }} ref={renderCanvasRef} />\n      <nav className={cn(\"actions-nav\", { disabled: !connected })}>\n        <button\n          className={cn(\"action-button mic-button\")}\n          onClick={() => setMuted(!muted)}\n        >\n          {!muted ? (\n            <span className=\"material-symbols-outlined filled\">mic</span>\n          ) : (\n            <span className=\"material-symbols-outlined filled\">mic_off</span>\n          )}\n        </button>\n\n        <div className=\"action-button no-action outlined\">\n          <AudioPulse volume={volume} active={connected} hover={false} />\n        </div>\n\n        {supportsVideo && (\n          <>\n            <MediaStreamButton\n              isStreaming={screenCapture.isStreaming}\n              start={changeStreams(screenCapture)}\n              stop={changeStreams()}\n              onIcon=\"cancel_presentation\"\n              offIcon=\"present_to_all\"\n            />\n            <MediaStreamButton\n              isStreaming={webcam.isStreaming}\n              start={changeStreams(webcam)}\n              stop={changeStreams()}\n              onIcon=\"videocam_off\"\n              offIcon=\"videocam\"\n            />\n          </>\n        )}\n        {children}\n      </nav>\n\n      <div className={cn(\"connection-container\", { connected })}>\n        <div className=\"connection-button-container\">\n          <button\n            ref={connectButtonRef}\n            className={cn(\"action-button connect-toggle\", { connected })}\n            onClick={connected ? disconnect : connect}\n          >\n            <span className=\"material-symbols-outlined filled\">\n              {connected ? \"pause\" : \"play_arrow\"}\n            </span>\n          </button>\n        </div>\n        <span className=\"text-indicator\">Streaming</span>\n      </div>\n    </section>\n  );\n}\n\nexport default memo(ControlTray);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}