{"ast":null,"code":"var _s = $RefreshSig$();\n/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { MultimodalLiveClient } from \"../utils/multimodal-live-client\";\nimport { AudioStreamer } from \"../utils/audio-streamer\";\nimport { audioContext } from \"../utils/utils\";\nimport VolMeterWorket from \"../utils/worklets/vol-meter\";\nexport function useLiveAPI({\n  url,\n  userId\n}) {\n  _s();\n  const client = useMemo(() => new MultimodalLiveClient({\n    url,\n    userId\n  }), [url, userId]);\n  const audioStreamerRef = useRef(null);\n  const [connected, setConnected] = useState(false);\n  const [volume, setVolume] = useState(0);\n\n  // register audio for streaming server -> speakers\n  useEffect(() => {\n    if (!audioStreamerRef.current) {\n      audioContext({\n        id: \"audio-out\"\n      }).then(audioCtx => {\n        audioStreamerRef.current = new AudioStreamer(audioCtx);\n        audioStreamerRef.current.addWorklet(\"vumeter-out\", VolMeterWorket, ev => {\n          setVolume(ev.data.volume);\n        }).then(() => {\n          // Successfully added worklet\n        });\n      });\n    }\n  }, [audioStreamerRef]);\n  useEffect(() => {\n    const onClose = () => {\n      setConnected(false);\n    };\n    const stopAudioStreamer = () => {\n      var _audioStreamerRef$cur;\n      return (_audioStreamerRef$cur = audioStreamerRef.current) === null || _audioStreamerRef$cur === void 0 ? void 0 : _audioStreamerRef$cur.stop();\n    };\n    const onAudio = data => {\n      var _audioStreamerRef$cur2;\n      return (_audioStreamerRef$cur2 = audioStreamerRef.current) === null || _audioStreamerRef$cur2 === void 0 ? void 0 : _audioStreamerRef$cur2.addPCM16(new Uint8Array(data));\n    };\n    client.on(\"close\", onClose).on(\"interrupted\", stopAudioStreamer).on(\"audio\", onAudio);\n    return () => {\n      client.off(\"close\", onClose).off(\"interrupted\", stopAudioStreamer).off(\"audio\", onAudio);\n    };\n  }, [client]);\n  const connect = useCallback(async () => {\n    client.disconnect();\n    await client.connect();\n    setConnected(true);\n  }, [client, setConnected]);\n  const disconnect = useCallback(async () => {\n    client.disconnect();\n    setConnected(false);\n  }, [setConnected, client]);\n  return {\n    client,\n    connected,\n    connect,\n    disconnect,\n    volume\n  };\n}\n_s(useLiveAPI, \"qULhDO/BeMGBJJpuXajifO7mwgk=\");","map":{"version":3,"names":["useCallback","useEffect","useMemo","useRef","useState","MultimodalLiveClient","AudioStreamer","audioContext","VolMeterWorket","useLiveAPI","url","userId","_s","client","audioStreamerRef","connected","setConnected","volume","setVolume","current","id","then","audioCtx","addWorklet","ev","data","onClose","stopAudioStreamer","_audioStreamerRef$cur","stop","onAudio","_audioStreamerRef$cur2","addPCM16","Uint8Array","on","off","connect","disconnect"],"sources":["C:/SkinLensR/SkinLensR/my-agent-api/frontend/src/hooks/use-live-api.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  Dispatch,\n  SetStateAction,\n} from \"react\";\nimport { MultimodalLiveClient } from \"../utils/multimodal-live-client\";\nimport { AudioStreamer } from \"../utils/audio-streamer\";\nimport { audioContext } from \"../utils/utils\";\nimport VolMeterWorket from \"../utils/worklets/vol-meter\";\n\nexport type UseLiveAPIResults = {\n  client: MultimodalLiveClient;\n  connected: boolean;\n  connect: () => Promise<void>;\n  disconnect: () => Promise<void>;\n  volume: number;\n};\n\nexport type UseLiveAPIProps = {\n  url?: string;\n  userId?: string;\n  onRunIdChange?: Dispatch<SetStateAction<string>>;\n};\n\nexport function useLiveAPI({\n  url,\n  userId,\n}: UseLiveAPIProps): UseLiveAPIResults {\n  const client = useMemo(\n    () => new MultimodalLiveClient({ url, userId }),\n    [url, userId],\n  );\n  const audioStreamerRef = useRef<AudioStreamer | null>(null);\n\n  const [connected, setConnected] = useState(false);\n  const [volume, setVolume] = useState(0);\n\n  // register audio for streaming server -> speakers\n  useEffect(() => {\n    if (!audioStreamerRef.current) {\n      audioContext({ id: \"audio-out\" }).then((audioCtx: AudioContext) => {\n        audioStreamerRef.current = new AudioStreamer(audioCtx);\n        audioStreamerRef.current\n          .addWorklet<any>(\"vumeter-out\", VolMeterWorket, (ev: any) => {\n            setVolume(ev.data.volume);\n          })\n          .then(() => {\n            // Successfully added worklet\n          });\n      });\n    }\n  }, [audioStreamerRef]);\n\n  useEffect(() => {\n    const onClose = () => {\n      setConnected(false);\n    };\n\n    const stopAudioStreamer = () => audioStreamerRef.current?.stop();\n\n    const onAudio = (data: ArrayBuffer) =>\n      audioStreamerRef.current?.addPCM16(new Uint8Array(data));\n\n    client\n      .on(\"close\", onClose)\n      .on(\"interrupted\", stopAudioStreamer)\n      .on(\"audio\", onAudio);\n\n    return () => {\n      client\n        .off(\"close\", onClose)\n        .off(\"interrupted\", stopAudioStreamer)\n        .off(\"audio\", onAudio);\n    };\n  }, [client]);\n\n  const connect = useCallback(async () => {\n    client.disconnect();\n    await client.connect();\n    setConnected(true);\n  }, [client, setConnected]);\n\n  const disconnect = useCallback(async () => {\n    client.disconnect();\n    setConnected(false);\n  }, [setConnected, client]);\n\n  return {\n    client,\n    connected,\n    connect,\n    disconnect,\n    volume,\n  };\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACEA,WAAW,EACXC,SAAS,EACTC,OAAO,EACPC,MAAM,EACNC,QAAQ,QAGH,OAAO;AACd,SAASC,oBAAoB,QAAQ,iCAAiC;AACtE,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,OAAOC,cAAc,MAAM,6BAA6B;AAgBxD,OAAO,SAASC,UAAUA,CAAC;EACzBC,GAAG;EACHC;AACe,CAAC,EAAqB;EAAAC,EAAA;EACrC,MAAMC,MAAM,GAAGX,OAAO,CACpB,MAAM,IAAIG,oBAAoB,CAAC;IAAEK,GAAG;IAAEC;EAAO,CAAC,CAAC,EAC/C,CAACD,GAAG,EAAEC,MAAM,CACd,CAAC;EACD,MAAMG,gBAAgB,GAAGX,MAAM,CAAuB,IAAI,CAAC;EAE3D,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;;EAEvC;EACAH,SAAS,CAAC,MAAM;IACd,IAAI,CAACa,gBAAgB,CAACK,OAAO,EAAE;MAC7BZ,YAAY,CAAC;QAAEa,EAAE,EAAE;MAAY,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAsB,IAAK;QACjER,gBAAgB,CAACK,OAAO,GAAG,IAAIb,aAAa,CAACgB,QAAQ,CAAC;QACtDR,gBAAgB,CAACK,OAAO,CACrBI,UAAU,CAAM,aAAa,EAAEf,cAAc,EAAGgB,EAAO,IAAK;UAC3DN,SAAS,CAACM,EAAE,CAACC,IAAI,CAACR,MAAM,CAAC;QAC3B,CAAC,CAAC,CACDI,IAAI,CAAC,MAAM;UACV;QAAA,CACD,CAAC;MACN,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACP,gBAAgB,CAAC,CAAC;EAEtBb,SAAS,CAAC,MAAM;IACd,MAAMyB,OAAO,GAAGA,CAAA,KAAM;MACpBV,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAED,MAAMW,iBAAiB,GAAGA,CAAA;MAAA,IAAAC,qBAAA;MAAA,QAAAA,qBAAA,GAAMd,gBAAgB,CAACK,OAAO,cAAAS,qBAAA,uBAAxBA,qBAAA,CAA0BC,IAAI,CAAC,CAAC;IAAA;IAEhE,MAAMC,OAAO,GAAIL,IAAiB;MAAA,IAAAM,sBAAA;MAAA,QAAAA,sBAAA,GAChCjB,gBAAgB,CAACK,OAAO,cAAAY,sBAAA,uBAAxBA,sBAAA,CAA0BC,QAAQ,CAAC,IAAIC,UAAU,CAACR,IAAI,CAAC,CAAC;IAAA;IAE1DZ,MAAM,CACHqB,EAAE,CAAC,OAAO,EAAER,OAAO,CAAC,CACpBQ,EAAE,CAAC,aAAa,EAAEP,iBAAiB,CAAC,CACpCO,EAAE,CAAC,OAAO,EAAEJ,OAAO,CAAC;IAEvB,OAAO,MAAM;MACXjB,MAAM,CACHsB,GAAG,CAAC,OAAO,EAAET,OAAO,CAAC,CACrBS,GAAG,CAAC,aAAa,EAAER,iBAAiB,CAAC,CACrCQ,GAAG,CAAC,OAAO,EAAEL,OAAO,CAAC;IAC1B,CAAC;EACH,CAAC,EAAE,CAACjB,MAAM,CAAC,CAAC;EAEZ,MAAMuB,OAAO,GAAGpC,WAAW,CAAC,YAAY;IACtCa,MAAM,CAACwB,UAAU,CAAC,CAAC;IACnB,MAAMxB,MAAM,CAACuB,OAAO,CAAC,CAAC;IACtBpB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC,EAAE,CAACH,MAAM,EAAEG,YAAY,CAAC,CAAC;EAE1B,MAAMqB,UAAU,GAAGrC,WAAW,CAAC,YAAY;IACzCa,MAAM,CAACwB,UAAU,CAAC,CAAC;IACnBrB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,CAACA,YAAY,EAAEH,MAAM,CAAC,CAAC;EAE1B,OAAO;IACLA,MAAM;IACNE,SAAS;IACTqB,OAAO;IACPC,UAAU;IACVpB;EACF,CAAC;AACH;AAACL,EAAA,CAtEeH,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}