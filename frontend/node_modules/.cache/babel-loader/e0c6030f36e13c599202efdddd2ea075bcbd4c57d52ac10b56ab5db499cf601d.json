{"ast":null,"code":"/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A registry to map attached worklets by their audio-context\n * any module using `audioContext.audioWorklet.addModule(` should register the worklet here\n */\n\nexport const registeredWorklets = new Map();\nexport const createWorketFromSrc = (workletName, workletSrc) => {\n  const script = new Blob([`registerProcessor(\"${workletName}\", ${workletSrc})`], {\n    type: \"application/javascript\"\n  });\n  return URL.createObjectURL(script);\n};","map":{"version":3,"names":["registeredWorklets","Map","createWorketFromSrc","workletName","workletSrc","script","Blob","type","URL","createObjectURL"],"sources":["C:/SkinLensR/SkinLensR/my-agent-api/frontend/src/utils/audioworklet-registry.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A registry to map attached worklets by their audio-context\n * any module using `audioContext.audioWorklet.addModule(` should register the worklet here\n */\nexport type WorkletGraph = {\n  node?: AudioWorkletNode;\n  handlers: Array<(this: MessagePort, ev: MessageEvent) => any>;\n};\n\nexport const registeredWorklets: Map<\n  AudioContext,\n  Record<string, WorkletGraph>\n> = new Map();\n\nexport const createWorketFromSrc = (\n  workletName: string,\n  workletSrc: string,\n) => {\n  const script = new Blob(\n    [`registerProcessor(\"${workletName}\", ${workletSrc})`],\n    {\n      type: \"application/javascript\",\n    },\n  );\n\n  return URL.createObjectURL(script);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAMA,OAAO,MAAMA,kBAGZ,GAAG,IAAIC,GAAG,CAAC,CAAC;AAEb,OAAO,MAAMC,mBAAmB,GAAGA,CACjCC,WAAmB,EACnBC,UAAkB,KACf;EACH,MAAMC,MAAM,GAAG,IAAIC,IAAI,CACrB,CAAC,sBAAsBH,WAAW,MAAMC,UAAU,GAAG,CAAC,EACtD;IACEG,IAAI,EAAE;EACR,CACF,CAAC;EAED,OAAOC,GAAG,CAACC,eAAe,CAACJ,MAAM,CAAC;AACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}